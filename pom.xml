<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>io.devyse.scheduler</groupId>
	<artifactId>scheduler-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Course Scheduler Parent</name>
	<description>Course Scheduler Parent Project</description>
	<url>http://coursescheduler.io</url>
	<inceptionYear>2009</inceptionYear>
  
	<organization>
		<name>Devyse.io</name>
		<url>http://devyse.io</url>
	</organization>
  
	<developers>
		<developer>
			<id>mike</id>
			<name>Mike Reinhold</name>
			<email>mike@devyse.io</email>
		</developer>
		
		<developer>
			<id>alex</id>
			<name>Alex Thomson</name>
		</developer>
		
		<developer>
			<id>phil</id>
			<name>Phil DeMonaco</name>
		</developer>
	</developers>
  
	<licenses>
		<license>
			<name>GNU General Public License (GPL)</name>
	  		<url>http://www.gnu.org/licenses/gpl.txt</url>
		</license>
	</licenses>
  
	<scm>
		<url>https://github.com/CourseScheduler/scheduler</url>
		<connection>git@github.com:CourseScheduler/scheduler.git</connection>
	</scm>
  
	<distributionManagement>
		<!-- TODO
		<site>
			<id>www</id>
			<url></url>
		</site>
		-->
		
		<!--  TODO
		<repository>
			<id></id>
		</repository>
		-->
	</distributionManagement>
  
	<modules>
	  <module>scheduler-core</module>
	</modules>
  
	<properties>
		<!-- Source Code and Target JVM version -->
		<maven.compiler.source>1.8</maven.compiler.source>
 		<maven.compiler.target>1.8</maven.compiler.target>
		
		<!-- Source file encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- Copyright information -->
		<codehaus.licenseName>gpl_v3</codehaus.licenseName>
		<copyright.start>2010</copyright.start>
		<copyright.end>2014</copyright.end>
		<copyright.holder>Devyse.io</copyright.holder>
		
		<!-- Dependency versions -->
		<slf4j.version>1.7.7</slf4j.version>
		<testng.version>6.8.8</testng.version>
		<mockito.version>1.9.5</mockito.version>
		
		<!-- Plugin versions -->
		<mycila.license.version>2.6</mycila.license.version>
		<codehaus.license.version>1.6</codehaus.license.version>
		
		<!-- TODO -->
	</properties>
  
	<profiles>
		<!-- Profile for skipping tests -->
		<profile>
			<id>skipTests</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
	    </profile>
	    
	    <!-- Profile for executing license checks & updates -->
	    <profile>
	    	<id>license</id>
	    	<build>
				<plugins>
				<!-- Use the Mycila plugin to update the file headers (it seems to work better) -->
					<plugin>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>${mycila.license.version}</version>
						<configuration>
							<quiet>false</quiet>
							<failIfMissing>true</failIfMissing>
							<aggregate>true</aggregate>
							<includes>
								<include>src/**/*.java</include>
							</includes>
							<useDefaultExcludes>true</useDefaultExcludes>
							<useDefaultMapping>true</useDefaultMapping>
							<header>src/main/license/code-header.txt</header>
							<headerDefinitions>
								<headerDefinition>src/main/license/javadoc-header.xml</headerDefinition>
							</headerDefinitions>
							<properties>
								<copyright.start>${copyright.start}</copyright.start>
								<copyright.end>	${copyright.end}</copyright.end>
								<copyright.holder>${copyright.holder}</copyright.holder>
							</properties>
						</configuration>
						<executions>
							<execution>
								<id>fileLicenseUpdate</id>
								<phase>process-sources</phase>
								<goals>
									<goal>format</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Use CodeHaus to update the project license and third party license -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>${codehaus.license.version}</version>
						<configuration>
							 <licenseName>${codehaus.licenseName}</licenseName>
						</configuration>
						<executions>
							<execution>
								<id>create-project-licenses</id>
								<goals>
									<goal>download-licenses</goal>
									<goal>update-project-license</goal>
									<goal>aggregate-add-third-party</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
							<execution>
								<id>check</id>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
	    </profile>
	</profiles>
  
    <repositories>
		<!-- Repository for empty logging interfaces, used by slf4j  -->
		<repository>
			<id>version99</id>
			<url>http://version99.qos.ch/</url>
		</repository>
	</repositories>
	
	<dependencies>
		<!-- TODO -->
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- SLF4j logging framework -->
			<dependency>
				<groupId>org.slf4j</groupId>
  				<artifactId>slf4j-api</artifactId>
  				<version>${slf4j.version}</version>
			</dependency>
			<!-- TODO Redirect JUL to SLF4j -->
			<!-- TODO Redirect log4j to SLF4j -->
			<!-- Redirect JCL to SLF4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- Mask other JCL dependencies via empty JCL -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>99-empty</version>
			</dependency>
			
			<!-- Testing Framework for unit and integration testing -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Mocking Framework to support unit tests -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			
			<!-- TODO Other dependencies-->
		</dependencies>
	</dependencyManagement>
  
	<build>		
		<!-- TODO -->
	</build>
  
</project>